{"name":"Thoth","tagline":"A simple static blog generator","body":"![{#Thoth}](thoth_circle.png)\r\n\r\n## Meet Thoth  \r\n\r\n{#Thoth} (or more commonly Thoth) is a new, simple static blog generator written in Swift.   \r\nJust write your articles in Markdown, put them in a directory, point Thoth to this directory, add a template, FTP settings and an output directory, and *voilÃ * !\r\nThoth will generate HTML pages for all articles, drafts, and index, and upload the output to your FTP. \r\n\r\nYou can use it as a command-line tool :\r\n\r\n\t$ thoth scribe /path/to/your/blog/folder\r\n\r\nor launch it as an application which will display its own prompt :\r\n\r\n\t./Thoth\r\n\tWelcome in {#THOTH}, a static blog generator.\r\n\t> scribe /path/to/your/blog/folder\r\n\tExport done !\r\n\tUploading to FTP... Upload done !\r\n\t> _\r\n\t\r\n\r\n##Install and setup\r\n###Install\r\nYou can either download the installer package from the [download folder](http://github.com/kosua20/Thoth/tree/master/download/) and execute it : Thoth will be installed in `/usr/local/bin`, or you can download the sources and compile it using Xcode.\r\n\r\n###Setup\r\nYou can ask Thoth to create a folder containing a config file and all the needed directories by running the command `setup /path/to/the/future/blog/directory`.  \r\n\r\nThe config file is a plain text file, so you can create it yourself if you prefer (see the **Config file** section). In all cases, you must fill it before running other Thoth commands.  \r\n\r\nDon't forget to add a template in the corresponding folder. You can use the default template, stored in the [download folder](http://github.com/kosua20/Thoth/tree/master/download/) of this repository.\r\n\r\nWhen you want to generate and upload your site for the first time, use the `first /path/to/your/blog/folder` command.\r\n\r\n##Writing\r\nEach article markdown file should be put in the `articles` directory, and follow this header style :\r\n\t\r\n\t#The title\r\n\t32/12/2032\r\n\tThe author (optional)\r\n\t\r\n\tThe beginning of the article content starts here. Nullam id dolor id nibh ultricies vehica  \r\n\tut id elit. Maecenas sed diam eget risus varius blandit sit amet non magna.\r\n\t\r\nFor drafts, just replace the date on the second line by the mention `draft`. Those files will be treated separately, and listed in an `index-drafts.html` file in the output.\r\n\r\nOnce you have finished writing your article, run the `scribe /path/to/blog/folder` command to automatically update the output and upload it. Do the same if you want to preview a draft online, or just call `generate /path/to/blog/folder` to generate it in the output folder.\r\n\r\n##Commands \r\n\r\n- `setup <path>`  \t\r\n\tCreates the configuration files and folders (articles, template, output, ressources) in the indicated directory.  \r\n\t**Argument:**   \r\n\t`<path>` points to the directory where the configurations files and folders  should be created.\r\n\r\n- `first <path>\t`  \r\n\tRuns the first generation/upload of the site  \r\n\t**Argument:**   \r\n\t`<path>` points to the directory containing the config file of the site to generate\r\n\r\n- `generate <path> [-a|-d|-f]`  \r\n\tGenerates the site in the specified ouput folder. All existing files are kept. Drafts are updated. New articles are added. Index is rebuilt.  \r\n\t**Argument:**   \r\n\t`<path>` points to the directory containing the config file of the site to generate  \r\n\t**Options:**\r\n\t- `-a` rebuilds articles only  \r\n\t- `-d` rebuilds drafts only  \r\n\t- `-f` forces to rebuild everything  \r\n\r\n- `upload <path> [-a|-d|-f]`  \r\n\tUpload the content of the site to the FTP set in the config file    \r\n\t**Argument:**   \r\n\t\t`<path>` points to the directory containing the config file of the site to generate  \r\n\t**Options:**\r\n\t- `-a` uploads articles only  \r\n\t- `-d` uploads drafts only  \r\n\t- `-f` uploads everything (Warning: the content of the ftp directory where the site content is put will be deleted)  \r\n\t\r\n\r\n- `scribe <path> [-a|-d|-f]`  \r\n\tCombines generate and upload with the corresponding path and option  \r\n\t**Argument:**  \r\n\t`<path>` points to the directory containing the config file of the site to generate and upload\r\n\r\n- `index <path>\t`  \r\n\tRegenerates the index.html file.  \r\n\t**Argument:**   \r\n\t`<path> `points to the directory containing the config file\r\n\r\n- `resources <path>`  \r\n\tRebuilds the resources directory.  \r\n\t**Argument:**  \r\n\t`<path>` points to the directory containing the config file\r\n\r\n- `check <path>`  \r\n\tChecks the configuration file.  \r\n\t**Argument:**  \r\n\t`<path>` points to the directory containing the config file\r\n\r\n- `help\t`\t  \r\n\tDisplays this help text\r\n\t\r\n- `--version\t`\t\r\n\tDisplays the current Thoth version\r\n\t\r\n- `license\t`\t\r\n\tDisplays the license text\r\n\r\n- `exit`  \r\n\tQuits the program\r\n\r\n## Functionalities\r\n\r\n### Templates\r\nCreate your own HTML templates : Thoth expects at least two files in the template folder: index.html and article.html. All other files and folders will be also copied. Thoth uses a keywords system for inserting your articles content in the template you created or downloaded. Those keywords are simple and easy-to-use. You can use :\r\n\r\n- `{#BLOG_TITLE}` to insert the blog title\r\n- `{#TITLE}` to insert an article title\r\n- `{#AUTHOR}` to insert the author name\r\n- `{#DATE}` to insert the date of an article\r\n- `{#LINK}` to insert a link to an article.\r\n- `{#CONTENT}` to insert the content of an article\r\n- `{#SUMMARY}` to insert a shortened version of an article (200-300 characters max.)\r\n- `{#ARTICLE_BEGIN}` and `{#ARTICLE_END}` in the index.html template to delimitate the HTML corresponding to an article item in the list.\r\n\r\n### Config file\r\nA simple, human-readable config file. No XML, JSON or YAML. Just a simple flat text file, nothing more. It should be put at the root of your blog folder, along with `articles`, `template`, `output` folders. The current settings are :\r\n\r\n- the path to the template folder (defaults to `rootPath/template`)  \r\n`templatePath:\t\t/custom/path/to/the/template/folder`\r\n\r\n- the path to the articles folder containing the .md files (defaults to `rootPath/articles`)  \r\n`articlesPath:\t\t/custom/path/to/the/articles/folder`\r\n\r\n- the path where Thoth should output the generated content (defaults to `rootPath/output`)  \r\n`outputPath:\t\t/custom/path/to/the/output/folder`\r\n\r\n- the default author name to use on each article page (defaults to the current Mac user)  \r\n`defaultAuthor:\t\tSimon Rodriguez`\r\n\r\n- the date style used in each article (in the .md file) (defaults to `MM/dd/yyyy`)  \r\n`dateStyle:\t\tdd/MM/YYYY`\r\n\r\n- the title of the blog (defaults to \"A new blog\")  \r\n`blogTitle:\t\tMy blog !`\r\n\r\n- the default width for each image in articles html pages (defaults to `640`)  \r\n`imageWidth:\t\t640`\r\n\r\n- set to true if you want each image of an article to link directly to the corresponding file (defaults to `false`)  \r\n`imagesLinks:\t\ttrue`\r\n\r\n- the ftp address pointing to the exact folder where the output should be uploaded  \r\n`ftpAdress:\t\tdomain-ftp.com/folder/for/blog`\r\n\r\n- the ftp username  \r\n`ftpUsername:\t`\t\r\n\r\n- the ftp password (the best way is to create a specific user/password with restricted rights to access your FTP)  \r\n`ftpPassword:\t`\t\r\n\r\n- the ftp port to use (defaults to 21)  \r\n`ftpPort:\t\t21`\r\n\r\n\r\n\r\n\r\n### Extended markdown parsing\r\nYou can create inline footnotes using the common format :\r\n\r\n\t[^ here's the content of my footnote]\r\n\t\r\nUse the classes `footnote-link` and `footnote` in your template to style the footnotes links and content, respectively.\r\n\r\nYou can also easily manage your images size in markdown, either by setting a default width, or defining it using the following syntax : \r\n\r\n\t![alt text](path/to/image.png \"800,600,title\")\r\n\r\nor just \r\n\r\n\t![alt text](path/to/image.png \"800,title\")\r\n\r\nto automatically set the height according to the picture ratio.\r\nPictures from your articles which are stored on your computer are also retrieved by Thoth and copied in article-specific folders, for an easier management.\r\n\r\n### Comments and ignored files\r\nIn the config file, lines beginning with a `#` or a `_` will be ignored.  \r\nDuring articles processing and copy, files beginning with `_` or `#` won't be processed or copied.\r\n\r\n##TODO:\r\n\r\n- adding support for referenced footnotes\r\n- adding the generation of sitemap.xml and feed.xml files\r\n- more keywords and templates options\r\n- better reliability of the `upload <path> -f` command\r\n\r\n## Authors and Contributors\r\nCreated in Swift using Xcode by [Simon Rodriguez](http://simonrodriguez.fr).  \r\nSee the license file for the licenses of third-party components and libraries.\r\n\r\n## Support or Contact\r\nHaving trouble with Thoth? Contact me at contact[...]simonrodriguez[...]fr and I'll try to help you.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}